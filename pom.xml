<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	 <modelVersion>4.0.0</modelVersion>
	 <groupId>org.kerrin</groupId>
	 <artifactId>dungeon</artifactId>
	 <packaging>war</packaging>
	 <version>1.0</version>
	 <name>dungeon</name>
	 
	 <properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.6</maven.compiler.source>
		<maven.compiler.target>1.6</maven.compiler.target>
		<java-version>1.6</java-version>
		<org.springframework-version>5.3.18</org.springframework-version>
		<org.springframework.security-version>4.0.3.RELEASE</org.springframework.security-version>
		<org.springframework.data-version>1.9.2.RELEASE</org.springframework.data-version>
		<org.aspectj-version>1.6.12</org.aspectj-version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
		<cglib-version>2.2.2</cglib-version>
		<com.fasterxml.jackson.core-version>2.6.3</com.fasterxml.jackson.core-version>
		<org.hibernate-version>4.1.7.Final</org.hibernate-version>
		<mysql-version>5.1.36</mysql-version>
		<junit-version>4.11</junit-version>
		<org.mockito-version>1.10.19</org.mockito-version>
		<org.hamcrest-version>2.0.0.0</org.hamcrest-version>
		<com.jayway.jsonpath-version>0.8.1</com.jayway.jsonpath-version>
	 </properties>
	 <dependencies>
		<dependency>
			<groupId>org.jboss.spec</groupId>
			<artifactId>jboss-javaee-6.0</artifactId>
			<version>1.0.0.Final</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>
		
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-tx</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>
		
		<dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-web</artifactId>
	        <version>${org.springframework-version}</version>
	      </dependency>
		
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${org.springframework.data-version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		
		<!-- Spring mail -->		
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>3.0.5.RELEASE</version>
        </dependency>
        
        <dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mailapi</artifactId>
			<version>1.4.3</version>
		</dependency>

		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>${cglib-version}</version>
		</dependency>

		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${org.springframework.security-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${org.springframework.security-version}</version>
		</dependency>
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-taglibs</artifactId>
		    <version>${org.springframework.security-version}</version>
		</dependency>				

		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>	
		
		<!-- Jackson -->
		<dependency>
	        <groupId>com.fasterxml.jackson.core</groupId>
	        <artifactId>jackson-core</artifactId>
	        <version>${com.fasterxml.jackson.core-version}</version>
	    </dependency>
	    <dependency>
	        <groupId>com.fasterxml.jackson.core</groupId>
	        <artifactId>jackson-databind</artifactId>
	        <version>${com.fasterxml.jackson.core-version}</version>
	    </dependency>
		
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>
		
		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
				
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		
		<!-- MySQL database driver -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-version}</version>
		</dependency>
		
		<dependency>
	        <groupId>org.hibernate</groupId>
	        <artifactId>hibernate-entitymanager</artifactId>
	        <version>${org.hibernate-version}</version>
	    </dependency>
				
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.3.1.Final</version>
		</dependency>
		
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20160212</version>
		</dependency>
				

		<!-- Test -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-junit</artifactId>
			<version>${org.hamcrest-version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-version}</version>
			<scope>test</scope>
			<exclusions>
		        <exclusion>
		            <artifactId>hamcrest-core</artifactId>
		            <groupId>org.hamcrest</groupId>
		        </exclusion>
		    </exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${org.mockito-version}</version>
			<scope>test</scope>
			<exclusions>
		        <exclusion>
		            <artifactId>hamcrest-core</artifactId>
		            <groupId>org.hamcrest</groupId>
		        </exclusion>
		    </exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.security-version}</version>
			<scope>test</scope>
		</dependency>
				
		<dependency>
		    <groupId>com.jayway.jsonpath</groupId>
		    <artifactId>json-path</artifactId>
		    <version>${com.jayway.jsonpath-version}</version>
		    <scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>com.jayway.jsonpath</groupId>
		    <artifactId>json-path-assert</artifactId>
		    <version>${com.jayway.jsonpath-version}</version>
		    <scope>test</scope>
		</dependency>
						
				
	</dependencies>
	<profiles>
	    <profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app will need. -->
			<!-- By default that is to put the resulting archive into the 'deployments' folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>openshift</id>
			<build>
				<finalName>dungeon</finalName>
				<plugins>
				  <plugin>
				    <artifactId>maven-war-plugin</artifactId>
				    <version>2.1.1</version>
				    <configuration>
				      <outputDirectory>deployments</outputDirectory>
				      <warName>ROOT</warName>
				    </configuration>
				  </plugin>
				  <plugin>
		           <artifactId>maven-antrun-plugin</artifactId>
		           <executions>
		             <execution>
		               <phase>generate-resources</phase>
		               <goals>
		                 <goal>run</goal>
		               </goals>
		               <configuration>
		                 <tasks>
		                   <delete file="${project.build.outputDirectory}/application.properties"/>
		                   <copy file="src/main/resources/application.openshift.properties"
		                         tofile="${project.build.outputDirectory}/application.properties"/>
		                 </tasks>
		               </configuration>
		             </execution>
		           </executions>
		         </plugin>
				</plugins>
			</build>
	    </profile>
	    <profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app will need. -->
			<!-- By default that is to put the resulting archive into the 'deployments' folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>eclipse</id>
			<build>
				<finalName>dungeon</finalName>
				<plugins>
					<plugin>
		                <artifactId>maven-eclipse-plugin</artifactId>
		                <version>2.9</version>
		                <configuration>
		                    <additionalProjectnatures>
		                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
		                    </additionalProjectnatures>
		                    <additionalBuildcommands>
		                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
		                    </additionalBuildcommands>
		                    <downloadSources>true</downloadSources>
		                    <downloadJavadocs>true</downloadJavadocs>
		                </configuration>
		            </plugin>
		            <plugin>
		                <groupId>org.apache.maven.plugins</groupId>
		                <artifactId>maven-compiler-plugin</artifactId>
		                <version>2.5.1</version>
		                <configuration>
		                    <source>1.6</source>
		                    <target>1.6</target>
		                    <compilerArgument>-Xlint:all</compilerArgument>
		                    <showWarnings>true</showWarnings>
		                    <showDeprecation>true</showDeprecation>
		                </configuration>
		            </plugin>
		            <plugin>
		                <groupId>org.codehaus.mojo</groupId>
		                <artifactId>exec-maven-plugin</artifactId>
		                <version>1.2.1</version>
		                <configuration>
		                    <mainClass>org.test.int1.Main</mainClass>
		                </configuration>
		            </plugin>
		            <plugin>
			           <artifactId>maven-antrun-plugin</artifactId>
			           <executions>
			             <execution>
			               <phase>generate-resources</phase>
			               <goals>
			                 <goal>run</goal>
			               </goals>
			               <configuration>
			                 <tasks>
			                   <delete file="${project.build.outputDirectory}/application.properties"/>
			                   <copy file="src/main/resources/application.eclipse.properties"
			                         tofile="${project.build.outputDirectory}/application.properties"/>
			                 </tasks>
			               </configuration>
			             </execution>
			           </executions>
			         </plugin>			         
				</plugins>
			</build>
	    </profile>
	</profiles>
</project>
